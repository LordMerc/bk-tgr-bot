"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.LuaWebService = void 0;
const HttpRequest_1 = require("./HttpRequest");
const Globals_1 = require("../Util/Globals");
const UrlTool_1 = require("../Tools/UrlTool");
class LuaWebService {
    constructor() {
        this.checkApiAccess = true;
    }
    async IsApiAccessEnabled() {
        if (this.checkApiAccess) {
            if (this.apiAccess !== undefined || this.timeToRecheckApiAccess !== new Date(Date.now())) {
                const request = new HttpRequest_1.HttpRequest();
                request.doNotParse = true;
                request.method = 'GET';
                request.url = UrlTool_1.BaseURL.ConstructServicePathFromSubDomain('api', 'universes/get-info', { placeId: Globals_1.Globals.PlaceID }, true, false, true);
                let response;
                try {
                    response = await request.execute(null);
                }
                catch { }
                let ableToParse = false;
                let parsedValue = false;
                if (!(response.length === 0)) {
                    try {
                        const v = new Map(Object.entries(JSON.parse(response)));
                        const itr = v.get('StudioAccessToApisAllowed');
                        if (itr !== undefined && typeof itr === 'boolean') {
                            ableToParse = true;
                            parsedValue = itr;
                        }
                    }
                    catch { }
                }
                this.apiAccess = ableToParse && parsedValue;
                this.timeToRecheckApiAccess = new Date(Date.now());
            }
            return this.apiAccess;
        }
        else {
            return true;
        }
    }
}
exports.LuaWebService = LuaWebService;
