/**
 * Jak: Try to shorten this, it's too long!
 * ROBLOX: This is too long, refactor it to happen on files.api
 * This uses https://files.api.sitetest4.robloxlabs.com/ClientSettingsFormatted?clientSettingsType=Client&apiKey=91105AEA-2038-4BFE-B98E-BF6A009E2AF7
 * And https://files.api.sitetest4.robloxlabs.com/ClientSettingsFormatted?ClientSettingsType=Client&apiKey=91105AEA-2038-4BFE-B98E-BF6A009E2AF7
 *
 * files.api needs a ROBLOX specific IP for it to actually not infinitely load,
 * why does it do this? It's an internal api, so we don't want people to hack into it because it has archived clientsettings and archived builds,
 * we don't purge things on it because we need backups for any sponsors that would like to see our old work.
 * Sponsors... definitely sponsors hahaha... no we need this incase we break something, or we want old binaries and can't find them.
 *
 */
export declare enum Group {
    'FVariable' = 0,
    'FLog' = 1,
    'DFLog' = 2,
    'SFLog' = 3,
    'FFlag' = 4,
    'DFFlag' = 5,
    'SFFlag' = 6,
    'FInt' = 7,
    'DFInt' = 8,
    'SFInt' = 9,
    'FString' = 10,
    'DFString' = 11,
    'SFString' = 12,
    'FPFilter' = 13,
    'FSettings' = 14,
    'All' = 15
}
export declare class ClientSettings {
    static GetSettings<SettingsType extends Group>(settingsType: SettingsType, settingsGroup?: string): Record<string, unknown> | string[] | Error;
    static GetFVariables(ctx?: string): Record<string, unknown> | Error | string[];
    static GetFLogs(ctx?: string): Record<string, unknown> | Error | string[];
    static GetDFLogs(ctx?: string): Record<string, unknown> | Error | string[];
    static GetSFLogs(ctx?: string): Record<string, unknown> | Error | string[];
    static GetFFlags(ctx?: string): Record<string, unknown> | Error | string[];
    static GetDFFlags(ctx?: string): Record<string, unknown> | Error | string[];
    static GetSFFlags(ctx?: string): Record<string, unknown> | Error | string[];
    static GetFInts(ctx?: string): Record<string, unknown> | Error | string[];
    static GetDFInts(ctx?: string): Record<string, unknown> | Error | string[];
    static GetSFInts(ctx?: string): Record<string, unknown> | Error | string[];
    static GetFStrings(ctx?: string): Record<string, unknown> | Error | string[];
    static GetDFStrings(ctx?: string): Record<string, unknown> | Error | string[];
    static GetSFStrings(ctx?: string): Record<string, unknown> | Error | string[];
    static GetFPFilters(ctx?: string): Record<string, unknown> | Error | string[];
    static GetFSettings(ctx?: string): Record<string, unknown> | Error | string[];
    static GetAllSettings(ctx?: string): Record<string, unknown> | Error | string[];
    static GetPlaceIDInPlaceFilter(key: string, placeId: number, ctx?: string): boolean;
}
