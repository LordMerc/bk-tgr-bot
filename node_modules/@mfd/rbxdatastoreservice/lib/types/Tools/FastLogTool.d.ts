export declare const cache: {
    readonly DFLog: Map<string, number>;
    readonly DFFlag: Map<string, boolean>;
    readonly DFInt: Map<string, number>;
    readonly DFString: Map<string, string>;
};
/**
 * Contains static FastLog variables.
 */
export declare const FLog: Record<string, number>;
/**
 * A function that refetches the value of the named FastLog variable in {name} and returns it.
 * @param {string} name The name of the FastLog variable.
 * @returns {number} Returns a number that can be used in the FastLogLibrary.
 */
export declare const DFLog: (name: string) => number;
/**
 * Contains server sided FastLog variables.
 */
export declare const SFLog: Record<string, number>;
/**
 * Contains static FastFlag variables.
 */
export declare const FFlag: Record<string, boolean>;
/**
 * A function that refetches the value of the named FastFlag variable in {name} and returns it.
 * @param {string} name The name of the FastFlag variable.
 * @returns {boolean} Returns a boolean that can be used in the code base to enable certain features.
 */
export declare const DFFlag: (name: string) => boolean;
/**
 * Contains server sided FastFlag variables.
 */
export declare const SFFlag: Record<string, boolean>;
/**
 * Contains static FastInt/FastNumber variables.
 */
export declare const FInt: Record<string, number>;
/**
 * A function that refetches the value of the named FastInt/FastNumber variable in {name} and returns it.
 * @param {string} name The name of the FastInt/FastNumber variable.
 * @returns {number} Returns a number that can be used in the code base to change certain features.
 */
export declare const DFInt: (name: string) => number;
/**
 * Contains server sided FastInt/FastNumber variables.
 */
export declare const SFInt: Record<string, number>;
/**
 * Contains static FastString variables.
 */
export declare const FString: Record<string, string>;
/**
 * A function that refetches the value of the named FastString variable in {name} and returns it.
 * @param {string} name The name of the FastString variable.
 * @returns {boolean} Returns a string that can be used in the code base to change certain features.
 */
export declare const DFString: (name: string) => string;
/**
 * Contains server sided FastString variables.
 */
export declare const SFString: Record<string, string>;
/**
 * An array of strings that contain ClientPackNames.
 */
export declare const FSettings: Array<string>;
/**
 * FastLogs a message with no params.
 * @param {number} group The FastLog level.
 * @param {string} message The message to log.
 * @returns {void} Returns nothing.
 */
export declare const FASTLOG: (group: number, message: string) => void;
/**
 * FastLogs a message with 1 param of any type.
 * @param {number} group The FastLog level.
 * @param {string} message The message to log.
 * @param {any} arg0 Arg0
 * @returns {void} Returns nothing.
 */
export declare const FASTLOG1: (group: number, message: string, arg0: any) => void;
/**
 * FastLogs a message with 2 params of any type.
 * @param {number} group The FastLog level.
 * @param {string} message The message to log.
 * @param {any} arg0 Arg0
 * @param {any} arg1 Arg1
 * @returns {void} Returns nothing.
 */
export declare const FASTLOG2: (group: number, message: string, arg0: any, arg1: any) => void;
/**
 * FastLogs a message with 3 params of any type.
 * @param {number} group The FastLog level.
 * @param {string} message The message to log.
 * @param {any} arg0 Arg0
 * @param {any} arg1 Arg1
 * @param {any} arg2 Arg2
 * @returns {void} Returns nothing.
 */
export declare const FASTLOG3: (group: number, message: string, arg0: any, arg1: any, arg2: any) => void;
/**
 * FastLogs a message with 4 params of any type.
 * @param {number} group The FastLog level.
 * @param {string} message The message to log.
 * @param {any} arg0 Arg0
 * @param {any} arg1 Arg1
 * @param {any} arg2 Arg2
 * @param {any} arg3 Arg3
 * @returns {void} Returns nothing.
 */
export declare const FASTLOG4: (group: number, message: string, arg0: any, arg1: any, arg2: any, arg3: any) => void;
/**
 * FastLogs a message with 5 params of any type.
 * @param {number} group The FastLog level.
 * @param {string} message The message to log.
 * @param {any} arg0 Arg0
 * @param {any} arg1 Arg1
 * @param {any} arg2 Arg2
 * @param {any} arg3 Arg3
 * @param {any} arg4 Arg4
 * @returns {void} Returns nothing.
 */
export declare const FASTLOG5: (group: number, message: string, arg0: any, arg1: any, arg2: any, arg3: any, arg4: any) => void;
/**
 * FastLogs a message with 1 string param.
 * @param {number} group The FastLog level.
 * @param {string} message The message to log.
 * @param {string} sarg The string argument to use.
 * @returns {void} Returns nothing.
 */
export declare const FASTLOGS: (group: number, message: string, sarg: string) => void;
/**
 * FastLogs a message with 1 param of number.
 * @param {number} group The FastLog level.
 * @param {string} message The message to log.
 * @param {number} arg0 Arg0
 * @returns {void} Returns nothing.
 */
export declare const FASTLOG1F: (group: number, message: string, arg0: number) => void;
/**
 * FastLogs a message with 2 params of number.
 * @param {number} group The FastLog level.
 * @param {string} message The message to log.
 * @param {number} arg0 Arg0
 * @param {number} arg1 Arg1
 * @returns {void} Returns nothing.
 */
export declare const FASTLOG2F: (group: number, message: string, arg0: number, arg1: number) => void;
/**
 * FastLogs a message with 3 params of number.
 * @param {number} group The FastLog level.
 * @param {string} message The message to log.
 * @param {number} arg0 Arg0
 * @param {number} arg1 Arg1
 * @param {number} arg2 Arg2
 * @returns {void} Returns nothing.
 */
export declare const FASTLOG3F: (group: number, message: string, arg0: number, arg1: number, arg2: number) => void;
/**
 * FastLogs a message with 4 params of number.
 * @param {number} group The FastLog level.
 * @param {string} message The message to log.
 * @param {number} arg0 Arg0
 * @param {number} arg1 Arg1
 * @param {number} arg2 Arg2
 * @param {number} arg3 Arg3
 * @returns {void} Returns nothing.
 */
export declare const FASTLOG4F: (group: number, message: string, arg0: number, arg1: number, arg2: number, arg3: number) => void;
/**
 * FastLogs a message with no filter.
 * @param {number} group The FastLog level.
 * @param {string} message The message to log.
 * @returns {void} Returns nothing.
 */
export declare const FASTLOGNOFILTER: (group: number, message: string) => void;
/**
 * FastLogs a message with no filter with 2 params of any type.
 * @param {number} group The FastLog level.
 * @param {string} message The message to log.
 * @param {any} arg0 Arg0
 * @param {any} arg1 Arg1
 * @returns {void} Returns nothing.
 */
export declare const FASTLOGNOFILTER2: (group: number, message: string, arg0: any, arg1: any) => void;
/**
 * References the given groupName.
 * @param {string} group The name of the group to reference.
 */
export declare const LOGGROUP: (group: string) => void;
/**
 * Sets the deault valur or gets the current value.
 * @param {string} group The name of the group to create.
 * @param {number} defaulton The value to set the group by,
 */
export declare const LOGVARIABLE: (group: string, defaulton: number) => void;
/**
 * References the given groupName.
 * @param {string} group The name of the group to reference.
 */
export declare const DYNAMIC_LOGGROUP: (group: string) => void;
/**
 * Sets the deault valur or gets the current value.
 * @param {string} group The name of the group to create.
 * @param {number} defaulton The value to set the group by,
 */
export declare const DYNAMIC_LOGVARIABLE: (group: string, defaulton: number) => void;
/**
 * References the given groupName.
 * @param {string} group The name of the group to reference.
 */
export declare const SYNCHRONIZED_LOGGROUP: (group: string) => void;
/**
 * Sets the deault valur or gets the current value.
 * @param {string} group The name of the group to create.
 * @param {number} defaulton The value to set the group by,
 */
export declare const SYNCHRONIZED_LOGVARIABLE: (group: string, defaulton: number) => void;
export declare const FASTFLAG: (v: string) => void;
export declare const FASTFLAGVARIABLE: (v: string, defaulton: boolean) => void;
export declare const DYNAMIC_FASTFLAG: (v: string) => void;
export declare const DYNAMIC_FASTFLAGVARIABLE: (v: string, defaulton: boolean) => void;
export declare const SYNCHRONIZED_FASTFLAG: (v: string) => void;
export declare const SYNCHRONIZED_FASTFLAGVARIABLE: (v: string, defaulton: boolean) => void;
export declare const FASTINT: (v: string) => void;
export declare const FASTINTVARIABLE: (v: string, defaulton: number) => void;
export declare const DYNAMIC_FASTINT: (v: string) => void;
export declare const DYNAMIC_FASTINTVARIABLE: (v: string, defaulton: number) => void;
export declare const SYNCHRONIZED_FASTINT: (v: string) => void;
export declare const SYNCHRONIZED_FASTINTVARIABLE: (v: string, defaulton: number) => void;
export declare const FASTSTRING: (v: string) => void;
export declare const FASTSTRINGVARIABLE: (v: string, defaulton: string) => void;
export declare const DYNAMIC_FASTSTRING: (v: string) => void;
export declare const DYNAMIC_FASTSTRINGVARIABLE: (v: string, defaulton: string) => void;
export declare const SYNCHRONIZED_FASTSTRING: (v: string) => void;
export declare const SYNCHRONIZED_FASTSTRINGVARIABLE: (v: string, defaulton: string) => void;
