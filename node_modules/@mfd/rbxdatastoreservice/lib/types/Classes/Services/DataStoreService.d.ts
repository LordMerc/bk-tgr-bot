import { OrderedDataStore } from '../OrderedDataStore';
import { GetDataStoreOptions } from '../GetDataStoreOptions';
import { DataStoreEnumerationPages } from '../DataStoreEnumerationPages';
export declare enum RequestType {
    GET_ASYNC = 5,
    UPDATE_ASYNC = 6,
    SET_ASYNC = 7,
    INCREMENT_ASYNC = 8,
    GET_SORTED_ASYNC_PAGE = 9
}
export declare abstract class DataStoreService {
    /**
     * This function returns the default {@link https://developer.roblox.com/en-us/api-reference/class/GlobalDataStore|GlobalDataStore}.
     * If you want to access a specific named data store instead,
     * you should use the {@link https://developer.roblox.com/en-us/api-reference/function/DataStoreService/GetDataStore|GetDataStore()} function.
     * @returns {DataStore} Default {@link https://developer.roblox.com/en-us/api-reference/class/GlobalDataStore|GlobalDataStore} instance
     */
    static GetGlobalDataStore(): DataStore;
    /**
     * This method returns a {@link https://developer.roblox.com/en-us/api-reference/class/GlobalDataStore|GlobalDataStore} by name/scope.
     * Subsequent calls to this method with the same name/scope will return the same object.
     * @param {string} name The name of the {@link https://developer.roblox.com/en-us/api-reference/class/GlobalDataStore|GlobalDataStore} you wish to get.
     * @param {string=} scope The scope of the {@link https://developer.roblox.com/en-us/api-reference/class/GlobalDataStore|GlobalDataStore} you wish to get, global by default
     * @returns {DataStore} {@link https://developer.roblox.com/en-us/api-reference/class/GlobalDataStore|GlobalDataStore}
     */
    static GetDataStore(name: string, scope?: string, options?: GetDataStoreOptions): DataStore;
    /**
     * This method returns an {@link https://developer.roblox.com/en-us/api-reference/class/OrderedDataStore|OrderedDataStore},
     * similar to the way {@link https://developer.roblox.com/en-us/api-reference/function/DataStoreService/GetDataStore|GetDataStore()} does with {@link https://developer.roblox.com/en-us/api-reference/class/GlobalDataStore|GlobalDataStores}.
     * Subsequent calls to this method with the same name/scope will return the same object.
     * @param {string} name The name of the {@link https://developer.roblox.com/en-us/api-reference/class/OrderedDataStore|OrderedDataStore} you wish to get.
     * @param {string=} scope The scope of the {@link https://developer.roblox.com/en-us/api-reference/class/OrderedDataStore|OrderedDataStore} you wish to get, global by default
     * @returns {OrderedDataStore} {@link https://developer.roblox.com/en-us/api-reference/class/OrderedDataStore|OrderedDataStore}
     */
    static GetOrderedDataStore(name: string, scope?: string): OrderedDataStore;
    /**
     * This is a funny method that existed for a while and then was purged. Don't use it, all it does is allow you to fetch a key from an empty scope.
     * @param {string} name The name of the {@link https://developer.roblox.com/en-us/api-reference/class/GlobalDataStore|GlobalDataStore} you wish to get.
     * @param {string} key The key identifying the entry being retrieved from the data store.
     * @returns {Variant} {@link https://developer.roblox.com/en-us/api-reference/data-types|Variant}
     * @yields This is a yielding function. When called, it will pause the JavaScript thread that called the function until a result is ready to be returned, without interrupting other scripts.
     * @deprecated This function has been deprecated and should not be used in new work.
     */
    static GetDataFromEmptyScopeDataStoreAsyncTemporary<Variant extends any>(name: string, key: string): Promise<Variant>;
    /**
     *
     * @param {string} prefix
     * @param {number} pageSize
     * @returns {DataStoreEnumerationPages}
     * @yields This is a yielding function. When called, it will pause the Lua thread that called the function until a result is ready to be returned, without interrupting other scripts.
     */
    static ListDataStoresAsync(prefix?: string, pageSize?: number): Promise<DataStoreEnumerationPages>;
}
