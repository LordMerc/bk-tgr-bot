"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.InputHelper = void 0;
const FastLogTool_1 = require("../Tools/FastLogTool");
FastLogTool_1.DYNAMIC_FASTINTVARIABLE('DataStoreKeyLengthLimit', 50);
class InputHelper {
    static CheckNameAndScope(name, scope) {
        if (scope.length == 0)
            throw new Error("DataStore scope can't be empty string");
        if (scope.length > FastLogTool_1.DFInt('DataStoreKeyLengthLimit'))
            throw new Error('DataStore scope is too long');
        if (name.length == 0)
            throw new Error("DataStore name can't be empty string");
        if (name.length > FastLogTool_1.DFInt('DataStoreKeyLengthLimit'))
            throw new Error('DataStore name is too long');
    }
    static CheckAccess(key) {
        if (key.length === 0)
            return [false, "Key name can't be empty"];
        if (key.length > FastLogTool_1.DFInt('DataStoreKeyLengthLimit'))
            return [false, 'Key name is too long'];
        return [true, ''];
    }
}
exports.InputHelper = InputHelper;
